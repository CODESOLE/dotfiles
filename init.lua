-- put user settings here
-- this module will be loaded after everything else when the application starts
-- it will be automatically reloaded when saved

local core = require "core"
local keymap = require "core.keymap"
local config = require "core.config"
local style = require "core.style"
local lspconfig = require "plugins.lsp.config"

------------------------------ Themes ----------------------------------------

-- light theme:
 -- core.reload_module("colors.onedark")

--------------------------- Key bindings -------------------------------------

-- key binding:
 keymap.add { ["ctrl+escape"] = "doc:toggle-line-comments" }


------------------------------- Fonts ----------------------------------------

-- customize fonts:
 style.font = renderer.font.load(DATADIR .. "/fonts/LiberationMono-Regular.ttf", 11 * SCALE)
 style.code_font = renderer.font.load(DATADIR .. "/fonts/LiberationMono-Regular.ttf", 11 * SCALE)
--
-- font names used by lite:
-- style.font          : user interface
-- style.big_font      : big text in welcome screen
-- style.icon_font     : icons
-- style.icon_big_font : toolbar icons
-- style.code_font     : code
--
-- the function to load the font accept a 3rd optional argument like:
--
-- {antialiasing="grayscale", hinting="full"}
--
-- possible values are:
-- antialiasing: grayscale, subpixel
-- hinting: none, slight, full

------------------------------ Plugins ----------------------------------------

-- enable or disable plugin loading setting config entries:

-- enable plugins.trimwhitespace, otherwise it is disable by default:
 config.plugins.trimwhitespace = true
--
-- config.format_on_save = true


-- Activate clangd without overwriting any settings for c/c++
-- autocompletion (requires a compile_commands.json file on
-- your project directory usually generated by build tools
-- like cmake or meson)
lspconfig.clangd.setup()

---Show diagnostic messages
---@type boolean
config.plugins.lsp.show_diagnostics = true

---Stop servers that aren't needed by any of the open files
---@type boolean
config.plugins.lsp.stop_unneeded_servers = true

---Yield when reading from LSP which may give you better UI responsiveness
---when receiving large responses, but will affect LSP performance.
---@type boolean
config.plugins.lsp.more_yielding = true

config.borderless = true

